from typing import Any
from typing import Tuple
from typing import Union

from matplotlib.afm import AFM
from object import object


def _to_int(x: Any) -> int: ...


def _to_float(x: {replace}) -> float: ...


def _to_str(x: {__len__, __iter__}) -> Any: ...


def _to_list_of_ints(s: Any) -> list[int]: ...


def _to_list_of_floats(s: {split}) -> list[float]: ...


def _to_bool(s: {lower}) -> bool: ...


def _parse_header(fh: {__iter__}) -> dict[Any, Union[float, bool, list[int]]]: ...


def _parse_char_metrics(fh: {__iter__}) -> dict: ...


def _parse_kern_pairs(fh: {__iter__}) -> dict[Tuple[Any, Any], float]: ...


def _parse_composites(fh: {__iter__}) -> dict: ...


def _parse_optional(fh: {__iter__}) -> dict: ...


class AFM(object):
    def __init__(self: AFM,
                 fh: {__iter__}) -> None: ...

    def get_bbox_char(self: AFM,
                      c: Any,
                      isord: bool = False) -> Any: ...

    def string_width_height(self: AFM,
                            s: {__len__, __iter__}) -> Union[Tuple[int, int], Tuple[int, Union[int, float]]]: ...

    def get_str_bbox_and_descent(self: AFM,
                                 s: {__len__, __iter__}) -> Union[
        Tuple[int, int, int, int, int], Tuple[int, float, int, Union[int, float], float]]: ...

    def get_str_bbox(self: AFM,
                     s: Any) -> Tuple: ...

    def get_name_char(self: AFM,
                      c: Any,
                      isord: bool = False) -> Any: ...

    def get_width_char(self: AFM,
                       c: Any,
                       isord: bool = False) -> Any: ...

    def get_width_from_char_name(self: AFM,
                                 name: Any) -> Any: ...

    def get_height_char(self: AFM,
                        c: Any,
                        isord: bool = False) -> Any: ...

    def get_kern_dist(self: AFM,
                      c1: Any,
                      c2: Any) -> int: ...

    def get_kern_dist_from_name(self: AFM,
                                name1: Any,
                                name2: Any) -> int: ...

    def get_fontname(self: AFM) -> Union[float, bool, list[int]]: ...

    def postscript_name(self: AFM) -> Union[float, bool, list[int]]: ...

    def get_fullname(self: AFM) -> Union[float, bool, list[int]]: ...

    def get_familyname(self: AFM) -> Union[float, bool, list[int], str]: ...

    def family_name(self: AFM) -> Union[float, bool, list[int], str]: ...

    def get_weight(self: AFM) -> Union[float, bool, list[int]]: ...

    def get_angle(self: AFM) -> Union[float, bool, list[int]]: ...

    def get_capheight(self: AFM) -> Union[float, bool, list[int]]: ...

    def get_xheight(self: AFM) -> Union[float, bool, list[int]]: ...

    def get_underline_thickness(self: AFM) -> Union[float, bool, list[int]]: ...

    def get_horizontal_stem_width(self: AFM) -> Union[float, bool, list[int]]: ...

    def get_vertical_stem_width(self: AFM) -> Union[float, bool, list[int]]: ...
